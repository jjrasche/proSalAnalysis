{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,6nE;;;;;;;;;;;;;;;;;;ACAkD;AACM;AAQxD;IAUE,sBAAmB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QAP1B,aAAQ,GAAG,GAAG,CAAC;QACf,qBAAgB,GAAW,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;QAChE,UAAK,GAAW,EAAC,GAAG,EAAC,KAAK,EAAE,GAAG,EAAC,MAAM,EAAC,CAAC;QAM9C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,SAAS,EAAE,KAAK;YAChB,mBAAmB,EAAE,IAAI;YACzB,aAAa,EAAE,IAAI;YACnB,wBAAwB,EAAE,IAAI;SAC/B,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE3D,yBAAyB;QACzB,4BAA4B;QAC5B,uCAAuC;QACvC,wCAAwC;QACxC,KAAK;IACP,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QACrD,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC5C,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;QACjD,sCAAsC;QACtC,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAChF,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC;QAErD,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;YACzB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC;gBAC5C,IAAI,EAAE,YAAY;gBAClB,YAAY,EAAE,IAAI;gBAClB,SAAS,EAAE,GAAG;aACf;SACF,CAAC;QACF,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;QACvF,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACjC,CAAC;IAED,sCAAe,GAAf;QACE,IAAI,GAAG,GAAsB;YAC3B,CAAC,YAAY,EAAE,iBAAiB,CAAC;SAClC;QACD,IAAI,cAAc,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACjD,OAAO,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACpC,CAAC;IAED,2CAAoB,GAApB;QACE,IAAI,IAAI,GAAG,IAAI,KAAK,EAAiB,CAAC;QACtC,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;QACrC,OAAO,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE;YACxC,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,gBAAgB,EAAE,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1F,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,iDAA0B,GAA1B;QAAA,iBAwBC;QAvBC,IAAI,UAAU,GAAG,IAAI,KAAK,EAAc,CAAC;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;QACrC,OAAO,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE;YACxC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3C,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvB;QAED,2BAA2B;QAC3B,IAAI,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,GAAe,IAAK,UAAG,CAAC,gBAAgB,GAAG,EAAE,EAAzB,CAAyB,CAAC,CAAC;QACpF,IAAI,CAAC,SAAS,GAAG,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC;QACzE,IAAI,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,GAAe,IAAK,UAAG,CAAC,QAAQ,GAAG,KAAI,CAAC,cAAc,EAAlC,CAAkC,CAAC,CAAC;QAC7F,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/E,IAAI,CAAC,SAAS,GAAG,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC;QAE3E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,GAAG,GAAG,IAAI,KAAK,EAAc,CAAC;QAClC,UAAU;aACP,MAAM,CAAC,UAAC,GAAe,IAAK,YAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,EAAlE,CAAkE,CAAC;aAC/F,OAAO,CAAC,UAAC,GAAe;YACvB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,gBAAgB,EAAE,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QAEL,OAAO,GAAG,CAAC;IACb,CAAC;IAED,8BAAO,GAAP,UAAQ,KAAiB,EAAE,GAAW,EAAE,IAAY;QAClD,OAAO,KAAK,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,IAAI;YACtC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAmB,GAAnB,UAAoB,IAAgB;QAClC,OAAO,uCACiB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,0CAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,4CACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,yDACf,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,2BACnD,CAAC;IACb,CAAC;IAED,qCAAc,GAAd,UAAe,UAAkB;QAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QAClD,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC;QACtF,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC,CAAC;QAEhG,IAAI,aAAa,GAAG,UAAU,GAAG,iBAAiB,CAAC;QACnD,IAAI,uBAAuB,GACzB,aAAa,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;YAC3B,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,QAAQ,GAAG,OAAO,GAAG,uBAAuB,CAAC;QAEjD,IAAI,SAAS,GAAG,WAAW,GAAG,sBAAsB,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAC3E,IAAI,gBAAgB,GAAG,SAAS,GAAG,UAAU,CAAC;QAE9C,OAAO;YACL,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC9B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YAChC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;SACjE,CAAC;IACJ,CAAC;IAED,4BAAK,GAAL,UAAM,KAAa,EAAE,SAAqB;QAArB,yCAAqB;QACxC,OAAO,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,gCAAS,GAAT,UAAU,KAAa;QACrB,OAAO,KAAK,GAAC,GAAG,CAAC;IACnB,CAAC;IAED,kCAAW,GAAX,UAAY,KAAa;QACvB,OAAO,KAAK,GAAG,GAAG,CAAC;IACrB,CAAC;IAED,8BAAO,GAAP,UAAQ,KAAoB;QAC1B,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE;YACvB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAzJU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAWuB,0DAAW;OAVvB,YAAY,CA0JxB;IAAD,mBAAC;CAAA;AA1JwB;AA4JzB;IAAA;IAGA,CAAC;IAAD,aAAC;AAAD,CAAC;AAED;IAAA;IAKA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC/KyD;AACjB;AACiB;AACQ;AACa;AAEhC;AACa;AAiB5D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,uEAAqB;gBACrB,0DAAW;gBACX,kEAAmB;gBACnB,wEAAc;aACf;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACxBmB;AACe;AAqB1B;AAE9B,IAAM,OAAO,GAAG;IACd,iEAAe;IACf,mEAAiB;IACjB,oEAAkB;IAClB,mEAAiB;IACjB,gEAAc;IACd,oEAAkB;IAClB,gEAAc;IACd,+DAAa;IACb,0EAAwB;IACxB,gEAAc;IACd,+DAAa;IACb,kEAAgB;IAChB,qEAAgB;IAChB,+DAAa;IACb,kEAAgB;IAChB,+DAAa;IACb,iEAAe;IACf,gEAAc;IACd,uEAAqB;IACrB,oEAAkB;CACnB,CAAC;AAMC;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SAEjB,CAAC;OAAc,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACnD9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"left stretch\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n    <div id=\\\"chart_div\\\"></div>\\n  </div>\\n</div>\\n<form fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\" [formGroup]=\\\"formGroup\\\" (keydown)=\\\"onEnter($event)\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"40\\\">\\n    <mat-form-field>\\n      <mat-label><b>Base Pay</b></mat-label>\\n      <input id=\\\"basePay\\\" type=\\\"number\\\" (blur)=\\\"drawChart()\\\" matInput formControlName=\\\"basePay\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label><b>Percent Production</b></mat-label>\\n      <input id=\\\"percentProduction\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" (blur)=\\\"drawChart()\\\" matInput formControlName=\\\"percentProduction\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label><b>Static Employee Costs</b></mat-label>\\n      <input id=\\\"staticCosts\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1\\\" (blur)=\\\"drawChart()\\\" matInput formControlName=\\\"staticCosts\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label><b>Pay Based Cost Percentage</b></mat-label>\\n      <input id=\\\"payAdjustedCostPercent\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.1\\\" (blur)=\\\"drawChart()\\\" matInput formControlName=\\\"payAdjustedCostPercent\\\">\\n    </mat-form-field>\\n  </div>\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"40\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\" >\\n      <mat-form-field fxLayout=\\\"column\\\" fxFlex=\\\"48\\\">\\n        <mat-label><b>25% loss point</b></mat-label>\\n        <input id=\\\"lossPoint\\\" readonly matInput [value]=\\\"lossPoint\\\">\\n      </mat-form-field>\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"48\\\">\\n        <mat-form-field>\\n          <mat-label><b>production gain point</b></mat-label>\\n          <input id=\\\"gainPoint\\\" readonly matInput [value]=\\\"gainPoint\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label><b>Desired Base Pay</b></mat-label>\\n          <input id=\\\"desiredBasePay\\\" matInput [(value)]=\\\"desiredBasePay\\\" (blur)=\\\"drawChart()\\\">\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\ndeclare let google: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  lineChartData: Object;\n  formGroup: FormGroup;\n  private stepSize = 200;\n  private calculatedDomain: Domain = { min: this.stepSize, max: 2000000 };\n  private xAxis: Domain = {min:50000, max:700000};\n  lossPoint: number;\n  gainPoint: number;\n  desiredBasePay: number;\n\n  constructor(public fb: FormBuilder) {\n    this.desiredBasePay = 78000;\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      \"basePay\": 78000,\n      \"percentProduction\": 18.5,\n      \"staticCosts\": 5700,\n      \"payAdjustedCostPercent\": 8.38\n    });\n\n    google.charts.load('current', { 'packages': ['corechart'] });\n    google.charts.setOnLoadCallback(this.drawChart.bind(this));\n    \n    // this.lineChartData = {\n    //   chartType: 'LineChart',\n    //   dataTable: this.createDataTable(),\n    //   options: { 'title': 'Production' },\n    // };\n  }\n\n  drawChart() {\n    var dataTable = new google.visualization.DataTable();\n    dataTable.addColumn('number', 'Production');\n    dataTable.addColumn('number', 'Cost/Production');\n    // A column for custom tooltip content\n    dataTable.addColumn({ type: 'string', role: 'tooltip', 'p': { 'html': true } });\n    dataTable.addRows(this.googleCreateProductionData());\n\n    var options = {\n      tooltip: { isHtml: true },\n      legend: 'none',\n      explorer: {\n        actions: ['dragToZoom', 'rightClickToReset'],\n        axis: 'horizontal',\n        keepInBounds: true,\n        maxZoomIn: 4.0\n      }\n    };\n    var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));\n    chart.draw(dataTable, options);\n  }\n\n  createDataTable(): Array<Array<any>> {\n    let ret: Array<Array<any>> = [\n      ['Production', 'Cost/Production'],\n    ]\n    let productionData = this.createProductionData();\n    return ret.concat(productionData);\n  }\n\n  createProductionData(): Array<Array<number>> {\n    let data = new Array<Array<number>>();\n    let xVal = this.calculatedDomain.min;\n    while (xVal <= this.calculatedDomain.max) {\n      let proSalData = this.proSalFunction(xVal);\n      data.push([xVal, proSalData.costToProduction, proSalData.totalPay, proSalData.totalCost]);\n      xVal += this.stepSize;\n    }\n    return data;\n  }\n\n  googleCreateProductionData(): Array<Array<any>> {\n    let proSalData = new Array<ProSalData>();\n    let xVal = this.calculatedDomain.min;\n    while (xVal <= this.calculatedDomain.max) {\n      proSalData.push(this.proSalFunction(xVal));\n      xVal += this.stepSize;\n    }\n\n    // set gain and loss points\n    let lossDataPoint = proSalData.find((psd: ProSalData) => psd.costToProduction < 25);\n    this.lossPoint = lossDataPoint == null ? null : lossDataPoint.production;\n    let gainDataPoint = proSalData.find((psd: ProSalData) => psd.totalPay > this.desiredBasePay);\n    let gainDataPoint2 = this.closest(proSalData, \"totalPay\", this.desiredBasePay);\n    this.gainPoint = gainDataPoint2 == null ? null : gainDataPoint2.production;\n\n    console.log(proSalData.length);\n    let ret = new Array<Array<any>>();\n    proSalData\n      .filter((psd: ProSalData) => this.xAxis.min < psd.production && psd.production < this.xAxis.max)\n      .forEach((psd: ProSalData) => {\n        ret.push([psd.production, psd.costToProduction, this.createToolTipString(psd)]);\n      });\n\n    return ret;\n  }\n\n  closest(array: Array<any>, key: string, goal: number) {\n    return array.reduce(function (prev, curr) {\n      return (Math.abs(curr[key] - goal) < Math.abs(prev[key] - goal) ? curr : prev);\n    });\n  }\n\n  createToolTipString(data: ProSalData): string {\n    return `<span>\n        <span>Production: ${data.production.toString()}</span></br>\n        <span>Cost: ${data.totalCost.toString()}</span></br>\n        <span><b>Pay: ${data.totalPay.toString()}</b></span></br>\n        <span>Cost/Production: ${data.costToProduction.toString()}</span>\n      </span>`;\n  }\n\n  proSalFunction(production: number): ProSalData {\n    let basePay = this.formGroup.get(\"basePay\").value;\n    let percentProduction = this.toPercent(this.formGroup.get(\"percentProduction\").value);\n    let staticCosts = this.formGroup.get(\"staticCosts\").value;\n    let payAdjustedCostPercent = this.toPercent(this.formGroup.get(\"payAdjustedCostPercent\").value);\n\n    let productionPay = production * percentProduction;\n    let additionalProductionPay =\n      productionPay - basePay > 0 ?\n        productionPay - basePay : 0;\n    let totalPay = basePay + additionalProductionPay;\n\n    let totalCost = staticCosts + payAdjustedCostPercent * totalPay + totalPay;\n    let costToProduction = totalCost / production;\n\n    return { \n      production: this.trunc(production),\n      totalPay: this.trunc(totalPay),\n      totalCost: this.trunc(totalCost),\n      costToProduction: this.trunc(this.fromPercent(costToProduction))\n    };\n  }\n\n  trunc(input: number, precision: number = 2): number {\n    return parseFloat(input.toFixed(precision));\n  }\n\n  toPercent(input: number): number {\n    return input/100;\n  }\n\n  fromPercent(input: number): number {\n    return input * 100;\n  }\n\n  onEnter(event: KeyboardEvent) {\n    if (event.keyCode == 13) {\n      this.drawChart();\n    }\n  }\n}\n\nclass Domain {\n  min: number;\n  max: number;\n}\n\nclass ProSalData {\n  production: number;\n  totalPay: number;\n  totalCost: number\n  costToProduction: number;\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    Ng2GoogleChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatInputModule,\r\n  MatSortModule,\r\n  MatProgressSpinnerModule,\r\n  MatBadgeModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatMenuModule,\r\n  MatDividerModule,\r\n  MatCardModule,\r\n  MatSelectModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatFormFieldModule,\r\n   } from '@angular/material';\r\n\r\nconst modules = [\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatInputModule,\r\n  MatSortModule,\r\n  MatProgressSpinnerModule,\r\n  MatBadgeModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  FlexLayoutModule,\r\n  MatMenuModule,\r\n  MatDividerModule,\r\n  MatCardModule,\r\n  MatSelectModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatFormFieldModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: modules,\r\n  exports: modules\r\n  ,\r\n}) export class MaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}